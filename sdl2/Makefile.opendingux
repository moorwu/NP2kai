# set ODCONFIG=gcw0 or ODCONFIG=rx90
ODCONFIG=gcw0

CC=/opt/$(ODCONFIG)-toolchain/usr/bin/mipsel-linux-cc
AR=/opt/$(ODCONFIG)-toolchain/usr/bin/mipsel-linux-ar
CXX=/opt/$(ODCONFIG)-toolchain/usr/bin/mipsel-linux-g++

DEBUG ?= 0
SUPPORT_NP2_THREAD ?= 1
SUPPORT_NP2_TICKCOUNT ?= 1
SUPPORT_NET ?= 1
SUPPORT_ASYNC_CPU ?= 0
# Set to SDL 2 for RG350 build
SDL_VERSION ?= 2
GIT_VERSION := "$(shell git rev-parse --short HEAD)"

ifeq ($(ODCONFIG), rx90)
SDL_VERSION ?= 2
else ifeq ($(ODCONFIG), gcw0)
# Set to SDL 2 for RG350 build
SDL_VERSION ?= 2
endif

ifeq ($(SDL_VERSION), 1)
SDL_CONFIG ?= /opt/$(ODCONFIG)-toolchain/usr/mipsel-$(ODCONFIG)-linux-uclibc/sysroot/usr/bin/sdl-config
SDL_OTHER_LIBS ?= -lSDL_ttf -lSDL_mixer
SUPPORT_ASYNC_CPU ?=
SDL_CFLAGS := $(shell $(SDL_CONFIG) --cflags) -DUSE_SDL_CONFIG
#SDL_LIBS := $(shell $(SDL_CONFIG) --libs)
SDL_LIBS := -lSDL
else
SDL_CONFIG ?= /opt/$(ODCONFIG)-toolchain/usr/mipsel-$(ODCONFIG)-linux-uclibc/sysroot/usr/bin/sdl2-config
SDL_OTHER_LIBS ?= -lSDL2_ttf -lSDL2_mixer
SUPPORT_ASYNC_CPU ?= -DSUPPORT_ASYNC_CPU
SDL_CFLAGS := $(shell $(SDL_CONFIG) --cflags) -DUSE_SDL_CONFIG
#SDL_LIBS := $(shell $(SDL_CONFIG) --libs)
SDL_LIBS := -lSDL2
endif

TARGET_NAME := np2kai

TARGET := $(TARGET_NAME)
CFLAGS += -DGIT_VERSION=\"$(GIT_VERSION)\"
CXXFLAGS += -DGIT_VERSION=\"$(GIT_VERSION)\"
LDFLAGS := -L/opt/$(ODCONFIG)-toolchain/usr/lib
fpic = -fPIC

ifeq ($(DEBUG), 1)
COMMONFLAGS += -O0 -g -DDEBUG -D_DEBUG -DTRACE
else
COMMONFLAGS += -DNDEBUG -D_NDEBUG
	ifneq ($(ODCONFIG), gcw0)
		COMMONFLAGS += -O2
	endif
endif

CORE_DIR := ..
INCFLAGS :=
SOURCES_C :=
SOURCES_CXX :=

include Makefile.common

INCFLAGS := $(SDL_CFLAGS) $(INCFLAGS)

INCFLAGS += -I$(NP2_PATH)/sdl2/opendingux
SOURCES_C += $(NP2_PATH)/sdl2/opendingux/main.c

INCFLAGS += 	-I$(NP2_PATH)/i286c
SOURCES_C += 	$(wildcard $(NP2_PATH)/i286c/*.c)

NP2SDLDEFINE := -DNP2_SDL2 -DUSE_SDLAUDIO -DUSE_SDLMIXER

OBJECTS  = $(SOURCES_CXX:.cpp=.o) $(SOURCES_C:.c=.o)
CXXFLAGS += $(fpic) $(INCFLAGS) $(COMMONFLAGS) $(NP2DEFINE) -D__OPENDINGUX__ $(NP2SDLDEFINE) -DSUPPORT_NP2_TICKCOUNT -DSUPPORT_NP2_THREAD -std=gnu++11
CFLAGS   += $(fpic) $(INCFLAGS) $(COMMONFLAGS) $(NP2DEFINE) -D__OPENDINGUX__ $(NP2SDLDEFINE) -DSUPPORT_NP2_TICKCOUNT -DSUPPORT_NP2_THREAD -std=gnu11
LDFLAGS  += $(fpic) -lm -lpthread $(SDL_LIBS) $(SDL_OTHER_LIBS) -L/opt/$(ODCONFIG)-toolchain/usr/lib

# Dedicated optimizations
ifeq ($(ODCONFIG), gcw0)
	GCW0_COMMON_FLAGS += -Ofast -fdata-sections -ffunction-sections -mno-fp-exceptions -mno-check-zero-division -fsingle-precision-constant -fno-common -march=mips32r2 -mtune=mips32r2 -flto -mno-shared -mplt
	CXXFLAGS += $(GCW0_COMMON_FLAGS)
	CFLAGS += $(GCW0_COMMON_FLAGS)
	LDFLAGS += -Wl,--as-needed -Wl,--gc-sections -flto -s
	# PGO (optional, 2 steps)
	# STEP 1
	# CXXFLAGS += -fprofile-generate=/media/data/local/home/PGO
	# CFLAGS += -fprofile-generate=/media/data/local/home/PGO
	# LDFLAGS += -lgcov 
	# LDFLAGS += $(CXXFLAGS) $(CFLAGS)
	# STEP 2
	# CXXFLAGS += -fprofile-use
	# CFLAGS   += -fprofile-use
	# LDFLAGS  += -fprofile-use
endif

all: buildopk
$(TARGET): $(OBJECTS)
ifeq ($(STATIC_LINKING), 1)
	$(AR) rcs $@ $(OBJECTS)
else
	$(CXX) -o $@ $(OBJECTS) $(LDFLAGS)
endif

%.o: %.c
	$(CC) $(CFLAGS) -c $^ -o $@

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $^ -o $@

clean:
	rm -f $(OBJECTS) $(TARGET)
	rm -f *.opk
	rm -f opk/$(TARGET)
	rm -f opk/default.$(ODCONFIG).desktop

cppcheck: compile_commands.json
	cppcheck --project=compile_commands.json --xml 2> cppcheck.xml

compile_commands.json:
	bear make -f Makefile.opendingux

buildopk: $(TARGET)
	cp -f $(TARGET) ./opk
	cp ./opk/default_opendingux_$(TARGET)_desktop ./opk/default.$(ODCONFIG).desktop
	mksquashfs ./opk $(TARGET).opk -all-root -noappend -no-exports

uninstall:
	rm /usr/local/bin/$(TARGET)

